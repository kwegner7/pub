#===============================================================================
# How to Push to the Repository
#===============================================================================
cd /home/kurt/repo/pub/examples
git status
On branch gh-pages

#===============================================================================
# Create HTML to demonstrate Jupyter Notebook Satellites and Linux C++ Threads
#===============================================================================
cd /home/kurt/repo/pub/examples

#===============================================================================
# publish things like photos
#===============================================================================
cd /home/data/proj/pub/photos/2016-10
and click on index.html

#===============================================================================
# Links
#===============================================================================
Show the pictures:
    http://kwegner7.github.io/pub/photos/2016-10/index.html

This is the local location of the photos:
    /home/data/proj/pub/photos/2016-10

This is the github repository:
    https://github.com/kwegner7/pub.git

Clone this repository to current directory:
    git clone https://github.com/kwegner7/pub.git
    the remote from github is called origin/master
    git checkout gh-pages
    # This pushes the HEAD of my local gh-pages to the HEAD of github gh-pages
    git push origin refs/heads/gh-pages # this is a hash

Create a new repository:
    https://github.com/kwegner7/pub 

And the link will be:
    http://kwegner7.github.io/pub/photos/2016-10/

#===============================================================================
# HOW THIS WEBSITE PAGE WAS CREATED
#===============================================================================

# Create a new .git folder here
  cd /data/proj/pub
  git init
  git add . 
  git commit -m "Publish Things"

# Remember each Remote and the Local consists of a set of Branches
# When we checkout from the Local, we must specify one of the Local Branches
# The working folder will be the HEAD commit of a Branch
# At this point, the following is redundant because it is our only Branch

  git checkout master # this is the HEAD of the "master" branch
    # git log shows that its HASH is:
    # 7177010dab29b8458c94f318655afe931ebc7892 (call this C0)
    # stored as one line in /data/proj/pub/.git/refs/heads/master

git branch --verbose # shows that this commit is the HEAD of branch master
* master a8f8fd8 Publish Things

# Locally, create a branch with a special name, it is this branch that GitHub
# will export as web pages
  git branch gh-pages
  git checkout gh-pages
  git push -u github gh-pages # not yet

#===============================================================================
# Manually create a new repository at GitHub
#===============================================================================
  click New Repository, then enter name "pub", then Create, then copy the link
  location of GitHub repository is: https://github.com/kwegner7/pub.git

  # Add the new Github repository as a remote
  cd /data/proj/pub
  git remote add github https://github.com/kwegner7/pub.git
  git remote -v
  git status and possibly commit
  git push github refs/heads/master refs/heads/gh-pages

NOW WE CAN SEE THE PHOTOS:


  # This simplifies the push commands
    git push -u github gh-pages
        Branch gh-pages set up to track remote branch gh-pages from github.
    git push -u backup gh-pages
  # So that:
    git push github
        now means:
            git push github refs/heads/gh-pages
    git push backup
        now means:
            git push backup refs/heads/gh-pages

# DISCUSSION: We now have these references:
   .../.git/refs/heads/master refers to C0
   .../.git/refs/heads/gh-pages refers to C0
   The working folder for both master and gh-pages contains a modified file
   Editted .git/description to be "Levi's Website"
   .../.git/index contains the staged files
   .../.git/config contains some parameters

# Create a backup repository on hard drive
  cd /media/kurt/F663-CCE9/git
  git clone --mirror /data/proj/git/levi/.git
  cd levi.git && git remote -v
    local  /data/proj/git/levi/.git (fetch)
    local  /data/proj/git/levi/.git (push)


# Add the new backup repository as a remote
  cd /data/proj/git/levi
  git remote add backup /media/kurt/F663-CCE9/git/levi.git 

# We have one local repository and one remote repository
    URL local repository: /data/proj/git/levi/.git
    URL remote repository: /media/kurt/F663-CCE9/git/levi.git

    The local repository refers to the remote repository as "backup"
    backup  /media/kurt/F663-CCE9/git/levi.git (push)
    cd /media/kurt/F663-CCE9/git/levi.git
    git remote --verbose
    The remote repository refers to the local repository as "local"
    local  /data/proj/git/levi/.git (push)

At this point "backup" config looks like:
[core]
	repositoryformatversion = 0
	filemode = false
	bare = true
	symlinks = false
	ignorecase = true
[remote "origin"]
	url = /data/proj/git/levi/.git
	fetch = +refs/*:refs/*
	mirror = true

At this point "local" config looks like:
[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
[remote "backup"]
	url = /media/kurt/F663-CCE9/git/levi.git
	fetch = +refs/heads/*:refs/remotes/backup/*

  ##############################################################
  # HOW TO PUSH
  #     Specify the name of the remote or the URL to the remote
  #     List the local branch HEADS to be pushed
  ##############################################################
  cd /data/proj/git/levi
  git status
  git commit -am "C1"
  git push backup refs/heads/gh-pages refs/heads/master
  git push backup master
  git push /media/kurt/F663-CCE9/git/levi.git refs/heads/*

  # this sets up "tracking"
  # This simplifies the push commands
    git push -u github gh-pages
    git push -u backup gh-pages
  # So that:
    git push github now means git push github refs/heads/gh-pages
    git push backup now means git push backup refs/heads/gh-pages
  # I think the best is to push the branch of the local folder just committed
    git status # says "On branch gh-pages" so:
    git push backup gh-pages

  cd /media/kurt/F663-CCE9/git/levi.git
  cd /data/proj/git/levi

  ##############################################################
  # HOW TO DIFF BETWEEN HEADS OF BRANCHES
  ##############################################################
  git diff gh-pages backup/gh-pages
  git diff refs/heads/gh-pages refs/remotes/backup/gh-pages
  git diff refs/heads/gh-pages refs/remotes/backup/master



  ##############################################################
  # HOW TO MERGE BRANCH gh-pages BACK INTO master
  # This will be a fast forward merge
  # Notice we do not remove the gh-pages branch so it continues
  # independent of master.
  ##############################################################
  cd /data/proj/git/levi
  git status -s
  git add notes-github.txt
  git status -s
  git commit -m "C2"
  git checkout master
  git diff --summary  refs/heads/master refs/heads/gh-pages
  git diff --shortstat refs/heads/master refs/heads/gh-pages
  git diff --name-only refs/heads/master refs/heads/gh-pages


########################################################################  
# Create a backup repository on USB
# It contains a master and a gh-pages branch.
# It contains a remote branch called "origin"
# The only remote for this repository is /proj/camp/.git
# and it is known as "origin"
  cd /media/kurt/8GB-BLUE4/git
  git clone --mirror /proj/camp/.git
  cd camp.git && git remote -v
      origin  /proj/camp/.git (fetch)
      origin  /proj/camp/.git (push)
  
# Back at the origin, git the new backup repository a remote name
# and push to it
  cd /proj/camp
  git remote add usb /media/kurt/8GB-BLUE4/git/camp.git 
# This sets push to push from the gh-pages branch of origin
# to the gh-pages branch of usb
  git push -u usb gh-pages
  git diff gh-pages usb/gh-pages
##########################################################################
 7155aa6db6647b440b4f3a46d534de55988f2020  

git push https://7155aa6db6647b440b4f3a46d534de55988f2020@github.com/kwegner7/camp.git gh-pages

https://github.com/blog/1270-easier-builds-and-deployments-using-git-over-https-and-oauth



  

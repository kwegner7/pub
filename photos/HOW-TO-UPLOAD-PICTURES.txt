#===============================================================================
# Links
#===============================================================================
Show the pictures:
    http://kwegner7.github.io/pub/photos/2016-10/index.html

This is the local location of the photos:
    /home/data/proj/pubnew/pub/photos/2016-10

This is the github repository:
    https://github.com/kwegner7/pub.git

#===============================================================================
# Create and Upload a new Album
#===============================================================================

    declare NEW_ALBUM="2016-12"
    declare PUB=/home/data/proj/pubnew/pub
    declare PHOTOS=${PUB}/photos
    declare EDIT_PICTURES=/home/pictures/edit-pictures

    # initialize the new photos folder
    cd ${PHOTOS}
    mkdir --parents ${NEW_ALBUM} ${NEW_ALBUM}/images
    cd ${NEW_ALBUM}
    cp ../template/index.html .
    cp ../template/methods.js .
    cp ../template/classes.js .
    cp ../template/entry-points.js .
    cp ../template/styles.css .

------------------------------------------
dpkg --get-selections 
apt list --installed
sudo apt-get check
             autoclean
             clean
             update
     # apt-get install exiftool
------------------------------------

#Reduce the size of the photos into smaller folder:
     cd ${EDIT_PICTURES}/${NEW_ALBUM}
     rm -rf ./smaller
     picture-smaller.bsh ${EDIT_PICTURES}/${NEW_ALBUM}

#Copy and paste the list into 
        gedit ${PHOTOS}/${NEW_ALBUM}/methods.js &

#Copy all of the smaller pictures to the images folder:
     cd ${PHOTOS}/${NEW_ALBUM}
     rm -rf ./images && mkdir --parents ./images
     cp ${EDIT_PICTURES}/${NEW_ALBUM}/smaller/* ${PHOTOS}/${NEW_ALBUM}/images/

Now upload to GitHub:
    cd ${PUB}
    git status
    # move the file from "unstaged in working folder" to be "staged" 
      git add 
    # following will update the HEAD of my local gh-pages from the staged items
    # since my current checkout is gh-pages
      git commit -m "Upload from Bogor"
    # This pushes the HEAD of my local gh-pages to the HEAD of github gh-pages
      git push origin refs/heads/gh-pages # this is a hash

















If this new album follows the usual "photos" style
then it needs to implement only:
    images folder containing the images
    methods.js containing list of file in the images folder





The structure of publish:
publish/
    classes.js entry-points.js methods.js styles.css (common)
    page-type1/
    page-type2/
    photos/
        classes.js entry-points.js methods.js styles.css (common to photos) 
        album1/
            classes.js entry-points.js methods.js styles.css (common to album1)  
            images/        



     
     
Open:
     /data/proj/common/photos/new-album/index.html

     
How to publish so that the link is:

    http://kwegner7.github.io/publish/photos/nary-and-kurt
    
    Move the following files to /data/proj/git/website
        /data/proj/common/photos
        /data/proj/common/styles.css
        /data/proj/common/methods.js
        /data/proj/common/classes.js
        /data/proj/common/entry-points.js
        
    cd /data/proj/git/website && git status
2003 04:53 PM website> git remote -v
backup  /media/kurt/Linux3TB/proj/website.git (fetch)
backup  /media/kurt/Linux3TB/proj/website.git (push)
github  https://github.com/kwegner7/camp.git (fetch)
github  https://github.com/kwegner7/camp.git (push)
2004 04:53 PM website> git branch -v
* master 465d946 [ahead 1] upload 2016-07-21
2005 04:54 PM website> 

    So there exists only a local master branch here.
    git diff master backup/master
    git diff master github/master
    git push backup master
    git push github master

https://github.com/kwegner7/publish.git
  git push github refs/heads/master refs/heads/gh-pages

    git push -u github gh-pages
    git push github
        now means:
            git push github refs/heads/gh-pages




